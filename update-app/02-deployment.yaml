apiVersion: apps/v1
kind: Deployment
metadata:
  name: update-app-deployment
  namespace: update-app
spec:
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: update-app
  template:
    metadata:
      labels:
        app: update-app
    spec:
      # https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
      # topologySpreadConstraints:
      #   - maxSkew: 1
      #     topologyKey: topology.kubernetes.io/zone
      #     whenUnsatisfiable: ScheduleAnyway
      #     labelSelector:
      #       matchLabels:
      #         app: update-app
      # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       - topologyKey: kubernetes.io/hostname
      #         labelSelector:
      #           matchLabels:
      #             app: update-app
      #     preferredDuringSchedulingIgnoredDuringExecution:
      #       - podAffinityTerm:
      #           labelSelector:
      #             matchLabels:
      #               app: update-app
      #           topologyKey: topology.kubernetes.io/zone
      #         weight: 100
      nodeSelector:
        kubernetes.io/os: linux
        # kubernetes.azure.com/mode: user
      # terminationGracePeriodSeconds: 30
      # lifecycle:
      #   preStop:
      #     exec:
      #       command: ["/bin/sh", "-c", "sleep 15"]
      containers:
        - image: jannemattila/webapp-update:1.0.11
          name: update-app
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
            limits:
              cpu: 150m
              memory: 150Mi
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          startupProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
